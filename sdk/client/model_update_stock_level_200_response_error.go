/*
Integration Adapter

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UpdateStockLevel200ResponseError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateStockLevel200ResponseError{}

// UpdateStockLevel200ResponseError struct for UpdateStockLevel200ResponseError
type UpdateStockLevel200ResponseError struct {
	Code *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewUpdateStockLevel200ResponseError instantiates a new UpdateStockLevel200ResponseError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateStockLevel200ResponseError() *UpdateStockLevel200ResponseError {
	this := UpdateStockLevel200ResponseError{}
	return &this
}

// NewUpdateStockLevel200ResponseErrorWithDefaults instantiates a new UpdateStockLevel200ResponseError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateStockLevel200ResponseErrorWithDefaults() *UpdateStockLevel200ResponseError {
	this := UpdateStockLevel200ResponseError{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *UpdateStockLevel200ResponseError) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel200ResponseError) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *UpdateStockLevel200ResponseError) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *UpdateStockLevel200ResponseError) SetCode(v string) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *UpdateStockLevel200ResponseError) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel200ResponseError) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *UpdateStockLevel200ResponseError) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *UpdateStockLevel200ResponseError) SetMessage(v string) {
	o.Message = &v
}

func (o UpdateStockLevel200ResponseError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateStockLevel200ResponseError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableUpdateStockLevel200ResponseError struct {
	value *UpdateStockLevel200ResponseError
	isSet bool
}

func (v NullableUpdateStockLevel200ResponseError) Get() *UpdateStockLevel200ResponseError {
	return v.value
}

func (v *NullableUpdateStockLevel200ResponseError) Set(val *UpdateStockLevel200ResponseError) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateStockLevel200ResponseError) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateStockLevel200ResponseError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateStockLevel200ResponseError(val *UpdateStockLevel200ResponseError) *NullableUpdateStockLevel200ResponseError {
	return &NullableUpdateStockLevel200ResponseError{value: val, isSet: true}
}

func (v NullableUpdateStockLevel200ResponseError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateStockLevel200ResponseError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


