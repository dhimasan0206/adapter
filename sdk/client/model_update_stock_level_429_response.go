/*
Integration Adapter

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UpdateStockLevel429Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateStockLevel429Response{}

// UpdateStockLevel429Response struct for UpdateStockLevel429Response
type UpdateStockLevel429Response struct {
	Error *UpdateStockLevel429ResponseError `json:"error,omitempty"`
	Id *string `json:"id,omitempty"`
	Message *string `json:"message,omitempty"`
	Status *string `json:"status,omitempty"`
	Store *UpdateStockLevelRequestStore `json:"store,omitempty"`
	Success *bool `json:"success,omitempty"`
	Timestamp *float32 `json:"timestamp,omitempty"`
}

// NewUpdateStockLevel429Response instantiates a new UpdateStockLevel429Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateStockLevel429Response() *UpdateStockLevel429Response {
	this := UpdateStockLevel429Response{}
	return &this
}

// NewUpdateStockLevel429ResponseWithDefaults instantiates a new UpdateStockLevel429Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateStockLevel429ResponseWithDefaults() *UpdateStockLevel429Response {
	this := UpdateStockLevel429Response{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *UpdateStockLevel429Response) GetError() UpdateStockLevel429ResponseError {
	if o == nil || IsNil(o.Error) {
		var ret UpdateStockLevel429ResponseError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel429Response) GetErrorOk() (*UpdateStockLevel429ResponseError, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *UpdateStockLevel429Response) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given UpdateStockLevel429ResponseError and assigns it to the Error field.
func (o *UpdateStockLevel429Response) SetError(v UpdateStockLevel429ResponseError) {
	o.Error = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdateStockLevel429Response) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel429Response) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UpdateStockLevel429Response) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UpdateStockLevel429Response) SetId(v string) {
	o.Id = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *UpdateStockLevel429Response) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel429Response) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *UpdateStockLevel429Response) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *UpdateStockLevel429Response) SetMessage(v string) {
	o.Message = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateStockLevel429Response) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel429Response) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateStockLevel429Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UpdateStockLevel429Response) SetStatus(v string) {
	o.Status = &v
}

// GetStore returns the Store field value if set, zero value otherwise.
func (o *UpdateStockLevel429Response) GetStore() UpdateStockLevelRequestStore {
	if o == nil || IsNil(o.Store) {
		var ret UpdateStockLevelRequestStore
		return ret
	}
	return *o.Store
}

// GetStoreOk returns a tuple with the Store field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel429Response) GetStoreOk() (*UpdateStockLevelRequestStore, bool) {
	if o == nil || IsNil(o.Store) {
		return nil, false
	}
	return o.Store, true
}

// HasStore returns a boolean if a field has been set.
func (o *UpdateStockLevel429Response) HasStore() bool {
	if o != nil && !IsNil(o.Store) {
		return true
	}

	return false
}

// SetStore gets a reference to the given UpdateStockLevelRequestStore and assigns it to the Store field.
func (o *UpdateStockLevel429Response) SetStore(v UpdateStockLevelRequestStore) {
	o.Store = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *UpdateStockLevel429Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel429Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *UpdateStockLevel429Response) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *UpdateStockLevel429Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *UpdateStockLevel429Response) GetTimestamp() float32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret float32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel429Response) GetTimestampOk() (*float32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *UpdateStockLevel429Response) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given float32 and assigns it to the Timestamp field.
func (o *UpdateStockLevel429Response) SetTimestamp(v float32) {
	o.Timestamp = &v
}

func (o UpdateStockLevel429Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateStockLevel429Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Store) {
		toSerialize["store"] = o.Store
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableUpdateStockLevel429Response struct {
	value *UpdateStockLevel429Response
	isSet bool
}

func (v NullableUpdateStockLevel429Response) Get() *UpdateStockLevel429Response {
	return v.value
}

func (v *NullableUpdateStockLevel429Response) Set(val *UpdateStockLevel429Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateStockLevel429Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateStockLevel429Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateStockLevel429Response(val *UpdateStockLevel429Response) *NullableUpdateStockLevel429Response {
	return &NullableUpdateStockLevel429Response{value: val, isSet: true}
}

func (v NullableUpdateStockLevel429Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateStockLevel429Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


