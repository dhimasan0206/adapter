/*
Integration Adapter

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the SalesOrdersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SalesOrdersRequest{}

// SalesOrdersRequest struct for SalesOrdersRequest
type SalesOrdersRequest struct {
	Action *string `json:"action,omitempty"`
	Id *string `json:"id,omitempty"`
	Object *string `json:"object,omitempty"`
	SalesOrders []SalesOrdersRequestSalesOrdersInner `json:"sales_orders,omitempty"`
}

// NewSalesOrdersRequest instantiates a new SalesOrdersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSalesOrdersRequest() *SalesOrdersRequest {
	this := SalesOrdersRequest{}
	return &this
}

// NewSalesOrdersRequestWithDefaults instantiates a new SalesOrdersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSalesOrdersRequestWithDefaults() *SalesOrdersRequest {
	this := SalesOrdersRequest{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *SalesOrdersRequest) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesOrdersRequest) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *SalesOrdersRequest) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *SalesOrdersRequest) SetAction(v string) {
	o.Action = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SalesOrdersRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesOrdersRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SalesOrdersRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SalesOrdersRequest) SetId(v string) {
	o.Id = &v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *SalesOrdersRequest) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesOrdersRequest) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *SalesOrdersRequest) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *SalesOrdersRequest) SetObject(v string) {
	o.Object = &v
}

// GetSalesOrders returns the SalesOrders field value if set, zero value otherwise.
func (o *SalesOrdersRequest) GetSalesOrders() []SalesOrdersRequestSalesOrdersInner {
	if o == nil || IsNil(o.SalesOrders) {
		var ret []SalesOrdersRequestSalesOrdersInner
		return ret
	}
	return o.SalesOrders
}

// GetSalesOrdersOk returns a tuple with the SalesOrders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SalesOrdersRequest) GetSalesOrdersOk() ([]SalesOrdersRequestSalesOrdersInner, bool) {
	if o == nil || IsNil(o.SalesOrders) {
		return nil, false
	}
	return o.SalesOrders, true
}

// HasSalesOrders returns a boolean if a field has been set.
func (o *SalesOrdersRequest) HasSalesOrders() bool {
	if o != nil && !IsNil(o.SalesOrders) {
		return true
	}

	return false
}

// SetSalesOrders gets a reference to the given []SalesOrdersRequestSalesOrdersInner and assigns it to the SalesOrders field.
func (o *SalesOrdersRequest) SetSalesOrders(v []SalesOrdersRequestSalesOrdersInner) {
	o.SalesOrders = v
}

func (o SalesOrdersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SalesOrdersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.SalesOrders) {
		toSerialize["sales_orders"] = o.SalesOrders
	}
	return toSerialize, nil
}

type NullableSalesOrdersRequest struct {
	value *SalesOrdersRequest
	isSet bool
}

func (v NullableSalesOrdersRequest) Get() *SalesOrdersRequest {
	return v.value
}

func (v *NullableSalesOrdersRequest) Set(val *SalesOrdersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSalesOrdersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSalesOrdersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSalesOrdersRequest(val *SalesOrdersRequest) *NullableSalesOrdersRequest {
	return &NullableSalesOrdersRequest{value: val, isSet: true}
}

func (v NullableSalesOrdersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSalesOrdersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


