/*
Integration Adapter

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UpdateStockLevel200ResponseResultsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateStockLevel200ResponseResultsInner{}

// UpdateStockLevel200ResponseResultsInner struct for UpdateStockLevel200ResponseResultsInner
type UpdateStockLevel200ResponseResultsInner struct {
	ChannelLocationCode *string `json:"channel_location_code,omitempty"`
	ChannelLocationId *string `json:"channel_location_id,omitempty"`
	ChannelProductId *string `json:"channel_product_id,omitempty"`
	ChannelProductVariantId *string `json:"channel_product_variant_id,omitempty"`
	ChannelProductVariantSku *string `json:"channel_product_variant_sku,omitempty"`
	LocationCode *string `json:"location_code,omitempty"`
	LocationId *string `json:"location_id,omitempty"`
	Message *string `json:"message,omitempty"`
	ProductId *string `json:"product_id,omitempty"`
	ProductVariantId *string `json:"product_variant_id,omitempty"`
	ProductVariantSku *string `json:"product_variant_sku,omitempty"`
	Status *string `json:"status,omitempty"`
	Success *bool `json:"success,omitempty"`
	Timestamp *float32 `json:"timestamp,omitempty"`
}

// NewUpdateStockLevel200ResponseResultsInner instantiates a new UpdateStockLevel200ResponseResultsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateStockLevel200ResponseResultsInner() *UpdateStockLevel200ResponseResultsInner {
	this := UpdateStockLevel200ResponseResultsInner{}
	return &this
}

// NewUpdateStockLevel200ResponseResultsInnerWithDefaults instantiates a new UpdateStockLevel200ResponseResultsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateStockLevel200ResponseResultsInnerWithDefaults() *UpdateStockLevel200ResponseResultsInner {
	this := UpdateStockLevel200ResponseResultsInner{}
	return &this
}

// GetChannelLocationCode returns the ChannelLocationCode field value if set, zero value otherwise.
func (o *UpdateStockLevel200ResponseResultsInner) GetChannelLocationCode() string {
	if o == nil || IsNil(o.ChannelLocationCode) {
		var ret string
		return ret
	}
	return *o.ChannelLocationCode
}

// GetChannelLocationCodeOk returns a tuple with the ChannelLocationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel200ResponseResultsInner) GetChannelLocationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelLocationCode) {
		return nil, false
	}
	return o.ChannelLocationCode, true
}

// HasChannelLocationCode returns a boolean if a field has been set.
func (o *UpdateStockLevel200ResponseResultsInner) HasChannelLocationCode() bool {
	if o != nil && !IsNil(o.ChannelLocationCode) {
		return true
	}

	return false
}

// SetChannelLocationCode gets a reference to the given string and assigns it to the ChannelLocationCode field.
func (o *UpdateStockLevel200ResponseResultsInner) SetChannelLocationCode(v string) {
	o.ChannelLocationCode = &v
}

// GetChannelLocationId returns the ChannelLocationId field value if set, zero value otherwise.
func (o *UpdateStockLevel200ResponseResultsInner) GetChannelLocationId() string {
	if o == nil || IsNil(o.ChannelLocationId) {
		var ret string
		return ret
	}
	return *o.ChannelLocationId
}

// GetChannelLocationIdOk returns a tuple with the ChannelLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel200ResponseResultsInner) GetChannelLocationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelLocationId) {
		return nil, false
	}
	return o.ChannelLocationId, true
}

// HasChannelLocationId returns a boolean if a field has been set.
func (o *UpdateStockLevel200ResponseResultsInner) HasChannelLocationId() bool {
	if o != nil && !IsNil(o.ChannelLocationId) {
		return true
	}

	return false
}

// SetChannelLocationId gets a reference to the given string and assigns it to the ChannelLocationId field.
func (o *UpdateStockLevel200ResponseResultsInner) SetChannelLocationId(v string) {
	o.ChannelLocationId = &v
}

// GetChannelProductId returns the ChannelProductId field value if set, zero value otherwise.
func (o *UpdateStockLevel200ResponseResultsInner) GetChannelProductId() string {
	if o == nil || IsNil(o.ChannelProductId) {
		var ret string
		return ret
	}
	return *o.ChannelProductId
}

// GetChannelProductIdOk returns a tuple with the ChannelProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel200ResponseResultsInner) GetChannelProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelProductId) {
		return nil, false
	}
	return o.ChannelProductId, true
}

// HasChannelProductId returns a boolean if a field has been set.
func (o *UpdateStockLevel200ResponseResultsInner) HasChannelProductId() bool {
	if o != nil && !IsNil(o.ChannelProductId) {
		return true
	}

	return false
}

// SetChannelProductId gets a reference to the given string and assigns it to the ChannelProductId field.
func (o *UpdateStockLevel200ResponseResultsInner) SetChannelProductId(v string) {
	o.ChannelProductId = &v
}

// GetChannelProductVariantId returns the ChannelProductVariantId field value if set, zero value otherwise.
func (o *UpdateStockLevel200ResponseResultsInner) GetChannelProductVariantId() string {
	if o == nil || IsNil(o.ChannelProductVariantId) {
		var ret string
		return ret
	}
	return *o.ChannelProductVariantId
}

// GetChannelProductVariantIdOk returns a tuple with the ChannelProductVariantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel200ResponseResultsInner) GetChannelProductVariantIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelProductVariantId) {
		return nil, false
	}
	return o.ChannelProductVariantId, true
}

// HasChannelProductVariantId returns a boolean if a field has been set.
func (o *UpdateStockLevel200ResponseResultsInner) HasChannelProductVariantId() bool {
	if o != nil && !IsNil(o.ChannelProductVariantId) {
		return true
	}

	return false
}

// SetChannelProductVariantId gets a reference to the given string and assigns it to the ChannelProductVariantId field.
func (o *UpdateStockLevel200ResponseResultsInner) SetChannelProductVariantId(v string) {
	o.ChannelProductVariantId = &v
}

// GetChannelProductVariantSku returns the ChannelProductVariantSku field value if set, zero value otherwise.
func (o *UpdateStockLevel200ResponseResultsInner) GetChannelProductVariantSku() string {
	if o == nil || IsNil(o.ChannelProductVariantSku) {
		var ret string
		return ret
	}
	return *o.ChannelProductVariantSku
}

// GetChannelProductVariantSkuOk returns a tuple with the ChannelProductVariantSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel200ResponseResultsInner) GetChannelProductVariantSkuOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelProductVariantSku) {
		return nil, false
	}
	return o.ChannelProductVariantSku, true
}

// HasChannelProductVariantSku returns a boolean if a field has been set.
func (o *UpdateStockLevel200ResponseResultsInner) HasChannelProductVariantSku() bool {
	if o != nil && !IsNil(o.ChannelProductVariantSku) {
		return true
	}

	return false
}

// SetChannelProductVariantSku gets a reference to the given string and assigns it to the ChannelProductVariantSku field.
func (o *UpdateStockLevel200ResponseResultsInner) SetChannelProductVariantSku(v string) {
	o.ChannelProductVariantSku = &v
}

// GetLocationCode returns the LocationCode field value if set, zero value otherwise.
func (o *UpdateStockLevel200ResponseResultsInner) GetLocationCode() string {
	if o == nil || IsNil(o.LocationCode) {
		var ret string
		return ret
	}
	return *o.LocationCode
}

// GetLocationCodeOk returns a tuple with the LocationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel200ResponseResultsInner) GetLocationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.LocationCode) {
		return nil, false
	}
	return o.LocationCode, true
}

// HasLocationCode returns a boolean if a field has been set.
func (o *UpdateStockLevel200ResponseResultsInner) HasLocationCode() bool {
	if o != nil && !IsNil(o.LocationCode) {
		return true
	}

	return false
}

// SetLocationCode gets a reference to the given string and assigns it to the LocationCode field.
func (o *UpdateStockLevel200ResponseResultsInner) SetLocationCode(v string) {
	o.LocationCode = &v
}

// GetLocationId returns the LocationId field value if set, zero value otherwise.
func (o *UpdateStockLevel200ResponseResultsInner) GetLocationId() string {
	if o == nil || IsNil(o.LocationId) {
		var ret string
		return ret
	}
	return *o.LocationId
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel200ResponseResultsInner) GetLocationIdOk() (*string, bool) {
	if o == nil || IsNil(o.LocationId) {
		return nil, false
	}
	return o.LocationId, true
}

// HasLocationId returns a boolean if a field has been set.
func (o *UpdateStockLevel200ResponseResultsInner) HasLocationId() bool {
	if o != nil && !IsNil(o.LocationId) {
		return true
	}

	return false
}

// SetLocationId gets a reference to the given string and assigns it to the LocationId field.
func (o *UpdateStockLevel200ResponseResultsInner) SetLocationId(v string) {
	o.LocationId = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *UpdateStockLevel200ResponseResultsInner) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel200ResponseResultsInner) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *UpdateStockLevel200ResponseResultsInner) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *UpdateStockLevel200ResponseResultsInner) SetMessage(v string) {
	o.Message = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *UpdateStockLevel200ResponseResultsInner) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel200ResponseResultsInner) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *UpdateStockLevel200ResponseResultsInner) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *UpdateStockLevel200ResponseResultsInner) SetProductId(v string) {
	o.ProductId = &v
}

// GetProductVariantId returns the ProductVariantId field value if set, zero value otherwise.
func (o *UpdateStockLevel200ResponseResultsInner) GetProductVariantId() string {
	if o == nil || IsNil(o.ProductVariantId) {
		var ret string
		return ret
	}
	return *o.ProductVariantId
}

// GetProductVariantIdOk returns a tuple with the ProductVariantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel200ResponseResultsInner) GetProductVariantIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductVariantId) {
		return nil, false
	}
	return o.ProductVariantId, true
}

// HasProductVariantId returns a boolean if a field has been set.
func (o *UpdateStockLevel200ResponseResultsInner) HasProductVariantId() bool {
	if o != nil && !IsNil(o.ProductVariantId) {
		return true
	}

	return false
}

// SetProductVariantId gets a reference to the given string and assigns it to the ProductVariantId field.
func (o *UpdateStockLevel200ResponseResultsInner) SetProductVariantId(v string) {
	o.ProductVariantId = &v
}

// GetProductVariantSku returns the ProductVariantSku field value if set, zero value otherwise.
func (o *UpdateStockLevel200ResponseResultsInner) GetProductVariantSku() string {
	if o == nil || IsNil(o.ProductVariantSku) {
		var ret string
		return ret
	}
	return *o.ProductVariantSku
}

// GetProductVariantSkuOk returns a tuple with the ProductVariantSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel200ResponseResultsInner) GetProductVariantSkuOk() (*string, bool) {
	if o == nil || IsNil(o.ProductVariantSku) {
		return nil, false
	}
	return o.ProductVariantSku, true
}

// HasProductVariantSku returns a boolean if a field has been set.
func (o *UpdateStockLevel200ResponseResultsInner) HasProductVariantSku() bool {
	if o != nil && !IsNil(o.ProductVariantSku) {
		return true
	}

	return false
}

// SetProductVariantSku gets a reference to the given string and assigns it to the ProductVariantSku field.
func (o *UpdateStockLevel200ResponseResultsInner) SetProductVariantSku(v string) {
	o.ProductVariantSku = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateStockLevel200ResponseResultsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel200ResponseResultsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateStockLevel200ResponseResultsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UpdateStockLevel200ResponseResultsInner) SetStatus(v string) {
	o.Status = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *UpdateStockLevel200ResponseResultsInner) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel200ResponseResultsInner) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *UpdateStockLevel200ResponseResultsInner) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *UpdateStockLevel200ResponseResultsInner) SetSuccess(v bool) {
	o.Success = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *UpdateStockLevel200ResponseResultsInner) GetTimestamp() float32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret float32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockLevel200ResponseResultsInner) GetTimestampOk() (*float32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *UpdateStockLevel200ResponseResultsInner) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given float32 and assigns it to the Timestamp field.
func (o *UpdateStockLevel200ResponseResultsInner) SetTimestamp(v float32) {
	o.Timestamp = &v
}

func (o UpdateStockLevel200ResponseResultsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateStockLevel200ResponseResultsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChannelLocationCode) {
		toSerialize["channel_location_code"] = o.ChannelLocationCode
	}
	if !IsNil(o.ChannelLocationId) {
		toSerialize["channel_location_id"] = o.ChannelLocationId
	}
	if !IsNil(o.ChannelProductId) {
		toSerialize["channel_product_id"] = o.ChannelProductId
	}
	if !IsNil(o.ChannelProductVariantId) {
		toSerialize["channel_product_variant_id"] = o.ChannelProductVariantId
	}
	if !IsNil(o.ChannelProductVariantSku) {
		toSerialize["channel_product_variant_sku"] = o.ChannelProductVariantSku
	}
	if !IsNil(o.LocationCode) {
		toSerialize["location_code"] = o.LocationCode
	}
	if !IsNil(o.LocationId) {
		toSerialize["location_id"] = o.LocationId
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.ProductVariantId) {
		toSerialize["product_variant_id"] = o.ProductVariantId
	}
	if !IsNil(o.ProductVariantSku) {
		toSerialize["product_variant_sku"] = o.ProductVariantSku
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableUpdateStockLevel200ResponseResultsInner struct {
	value *UpdateStockLevel200ResponseResultsInner
	isSet bool
}

func (v NullableUpdateStockLevel200ResponseResultsInner) Get() *UpdateStockLevel200ResponseResultsInner {
	return v.value
}

func (v *NullableUpdateStockLevel200ResponseResultsInner) Set(val *UpdateStockLevel200ResponseResultsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateStockLevel200ResponseResultsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateStockLevel200ResponseResultsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateStockLevel200ResponseResultsInner(val *UpdateStockLevel200ResponseResultsInner) *NullableUpdateStockLevel200ResponseResultsInner {
	return &NullableUpdateStockLevel200ResponseResultsInner{value: val, isSet: true}
}

func (v NullableUpdateStockLevel200ResponseResultsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateStockLevel200ResponseResultsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


